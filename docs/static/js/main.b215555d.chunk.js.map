{"version":3,"sources":["serviceWorker.js","components/TitleComponent.js","components/FormComponent.js","components/ImagesComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/LoaderComponent.js","components/InfoComponent.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","TitleComponent","react_default","a","createElement","className","React","Component","addFormOptions","key","text","value","FormComponent","_this$props","this","props","correctDate","correctCamera","getImages","handleChangeDate","handleChangeCamera","enabled","Form","onSubmit","Group","Input","name","type","fluid","placeholder","onChange","Select","options","Button","disabled","ImagesComponent","state","activeDimmer","itemID","handleOpen","e","target","getAttribute","console","log","_this","setState","handleClose","_this2","moreThanZeroImages","images","_this$state","map","item","id","src","img_src","alt","onClick","Dimmer","active","page","Segment","inverted","HeaderComponent","Header","as","Icon","size","handleOpenInfo","FooterComponent","href","LoaderComponent","activeLoader","Loader","InfoComponent","activeInfoWindow","handleCloseInfo","API_KEY","App","dateInput","cameraInput","activePage","myRef","createRef","currentDate","moment","Date","format","length","_ref","_callee","data","regenerator_default","wrap","_context","prev","next","scrollTo","current","offsetTop","document","body","style","overflow","fetch","concat","then","json","sent","photos","t0","error","stop","handlePaginationChange","_ref3","_this$state2","imagesForPagination","slice","components_HeaderComponent","ref","components_TitleComponent","components_FormComponent","components_ImagesComponent","Pagination","ellipsisItem","firstItem","lastItem","prevItem","content","icon","nextItem","onPageChange","totalPages","Math","ceil","components_FooterComponent","components_InfoComponent","components_LoaderComponent","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b215555d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nclass TitleComponent extends React.Component {\n  render() {\n    return (\n      <div className=\"title-div\">\n        <h2>Explore martian soil by his eyes...</h2>\n        <p>Curiosity Rover is an automated and autonomous science and research laboratory sent to Mars as part of the Mars Science Laboratory (MSL) research program to assess the potential possibility of organic life on Mars and explore about planet weather conditions. Curiosity was launched from Cape Canaveral on November 26, 2011 and landed on Aeolis Palus plain inside Gale on Mars on 6 August 2012. To this day Curiosity is on duty and still send us new photos from planet Mars.</p>\n      </div>\n    );\n  }\n}\n\nexport default TitleComponent;","import React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\n\nconst addFormOptions = [\n  { key: \"fhaz\", text: \"Front Hazard Avoidance Camera\", value: \"fhaz\" },\n  { key: \"rhaz\", text: \"Rear Hazard Avoidance Camera\", value: \"rhaz\" },\n  { key: \"mast\", text: \"Mast Camera\", value: \"mast\" },\n  { key: \"mahli\", text: \"Mars Hand Lens Imager\", value: \"mahli\" },\n  { key: \"navcam\", text: \"Navigation Camera\", value: \"navcam\" }\n];\n\nclass FormComponent extends React.Component {\n\n  render() {\n    const { correctDate, correctCamera, getImages, handleChangeDate, handleChangeCamera } = this.props;\n\n    const enabled =\n      correctDate &&\n      correctCamera;\n\n    return (\n      <Form onSubmit={getImages}>\n        <Form.Group>\n          <Form.Input name=\"date\" type=\"date\" fluid placeholder='Date' onChange={handleChangeDate} />\n          <Form.Select fluid options={addFormOptions} placeholder='Camera' onChange={handleChangeCamera} />\n          <Button disabled={!enabled}>Get Images</Button>\n        </Form.Group>\n      </Form>\n    );\n  }\n}\n\nexport default FormComponent;","import React from 'react';\nimport { Segment, Dimmer } from 'semantic-ui-react';\n\nclass ImagesComponent extends React.Component {\n  state = {\n    activeDimmer: false,\n    itemID: ''\n  }\n\n  handleOpen = (e) => {\n    let itemID = e.target.getAttribute(\"src\");\n    console.log(itemID);\n    this.setState({ activeDimmer: true, itemID });\n  }\n\n  handleClose = () => this.setState({ activeDimmer: false });\n\n  render() {\n    const { moreThanZeroImages, images } = this.props;\n    const { activeDimmer, itemID } = this.state;\n\n    return (\n      <div className=\"image-div\">\n        {moreThanZeroImages\n          ? images.map(item => (\n            <img key={item.id} src={item.img_src} alt={item.id} onClick={this.handleOpen} />\n          ))\n          : <p>Sorry, there's no photos from that day or type of camera. Please check another ones.</p>}\n\n        <Dimmer active={activeDimmer} onClick={this.handleClose} page>\n          <Segment inverted>\n            <img src={itemID} alt={itemID} />\n          </Segment>\n        </Dimmer>\n      </div>\n    );\n  }\n}\n\nexport default ImagesComponent;","import React from 'react';\nimport { Header, Icon } from 'semantic-ui-react';\n\nclass HeaderComponent extends React.Component {\n  render() {\n    return (\n      <header>\n        <Header as='h1'>Mars Miracle Gallery</Header>\n        <Icon className=\"info-icon\" name=\"info circle\" size=\"huge\" onClick={this.props.handleOpenInfo} />\n      </header>\n    );\n  }\n}\n\nexport default HeaderComponent;","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nclass FooterComponent extends React.Component {\n  render() {\n    return (\n      <footer>\n        <p>Kongresowy 2019</p>\n        <a href=\"https://www.linkedin.com/in/pawel-sworobowicz/\" >\n          <Icon name=\"linkedin\" size=\"huge\" />\n        </a>\n        <a href=\"https://github.com/Kongresowy\" >\n          <Icon name=\"github square\" size=\"huge\" />\n        </a>\n      </footer>\n    );\n  }\n}\n\nexport default FooterComponent;","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nclass LoaderComponent extends React.Component {\n  render() {\n    return (\n      <Dimmer active={this.props.activeLoader}>\n        <Loader size='massive'>Loading ...</Loader>\n      </Dimmer>\n    );\n  }\n}\n\nexport default LoaderComponent;","import React from 'react';\nimport { Dimmer, Segment } from 'semantic-ui-react';\n\nclass InfoComponent extends React.Component {\n  render() {\n    return (\n      <Dimmer active={this.props.activeInfoWindow} onClick={this.props.handleCloseInfo} page>\n        <Segment className=\"info-segment\" inverted>\n          <h2>ABOUT</h2>\n          <div>This web application was created to bring you closer to the knowledge of the red planet - Mars. It uses <span><a href=\"https://api.nasa.gov/api.html#MarsPhotos\">NASA Mars Rover Photo API</a></span> designed to collect image data gathered by Curiosity, Opportunity and Spirit rovers on Mars and maintained by <span><a href=\"https://github.com/chrisccerami/mars-photo-api\">Chris Cerami</a></span>.</div>\n          <h3>How to use?</h3>\n          <div>The application provides you a sheet form. Please set your date and select a camera type (Remember! Curiosity first day on Mars is August 6, 2012 and rover is still active). If everything is correct, click Get Images button and you should receive proper photos. Clicking on chosen image opens it in higher resolution. Clicking anywhere else closes this window.</div>\n          <h3>About images</h3>\n          <div>Curiosity practically uses 7 camera types. In this application, I do not allow usage of CHEMCAM (Chemistry and Camera Complex) and MARDI (Mars Descent Imager), because photos are mostly unavailable or not very attractive. If you want check them, please visit official <span><a href=\"https://mars.nasa.gov/msl/\">NASA JPL (Jet Propulsion Laboratory) website</a></span>. Please, keep in mind that all images are a raw footage. Most of them are unavailable, duplicated in one day/camera type or hard to properly read. </div>\n          <h3>About Me</h3>\n          <div>My name is Pawel Sworobowicz. I'm a web developer specializing especially in front-end and UX/UI technologies. If you like my work or need my services, feel free to contact me by <span><a href=\"https://www.linkedin.com/in/pawel-sworobowicz/\">LinkedIn</a></span> or email: sworobowicz.pawel@gmail.com</div>\n        </Segment>\n      </Dimmer>\n    );\n  }\n}\n\nexport default InfoComponent;","import React from 'react';\nimport moment from 'moment';\nimport { Pagination, Icon } from 'semantic-ui-react';\n\nimport TitleComponent from './TitleComponent';\nimport FormComponent from './FormComponent';\nimport ImagesComponent from './ImagesComponent';\nimport HeaderComponent from './HeaderComponent';\nimport FooterComponent from './FooterComponent';\nimport LoaderComponent from './LoaderComponent';\nimport InfoComponent from './InfoComponent';\n\nconst API_KEY = \"7bXJyxKXWViccqKcFIgR2kcjHwbKTTzb7EUyNIrK\";\n\nclass App extends React.Component {\n  state = {\n    dateInput: '',\n    cameraInput: '',\n    images: [],\n    correctDate: false,\n    correctCamera: false,\n    moreThanZeroImages: true,\n    activePage: 1,\n    activeLoader: false,\n    activeInfoWindow: false\n  }\n\n  myRef = React.createRef();\n\n  handleChangeDate = (e) => {\n    let dateInput = (e.target.value);\n    let currentDate = moment(new Date()).format('YYYY-MM-DD');\n    if (dateInput.length === 0 || dateInput > currentDate || dateInput < moment(new Date(2012, 7, 6)).format('YYYY-MM-DD')) {\n      this.setState({ correctDate: false });\n    } else {\n      this.setState({ dateInput, correctDate: true });\n    }\n  }\n\n  handleChangeCamera = (e, { value }) => {\n    value ? this.setState({ cameraInput: value, correctCamera: true }) : this.setState({ correctCamera: false });\n  }\n\n  getImages = async (e) => {\n    window.scrollTo(0, this.myRef.current.offsetTop);\n    const { dateInput, cameraInput } = this.state;\n    try {\n      this.setState({ activeLoader: true });\n      document.body.style.overflow = \"hidden\";\n      const data = await fetch(`https://cors-anywhere.herokuapp.com/https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?earth_date=${dateInput}&camera=${cameraInput}&api_key=${API_KEY}`).then(data => data.json());\n      this.setState({ images: data.photos, activePage: 1, activeLoader: false });\n      data.photos.length < 1 ? this.setState({ moreThanZeroImages: false }) : this.setState({ moreThanZeroImages: true });\n      document.body.style.overflow = \"auto\";\n    } catch (error) {\n      console.error(error);\n    };\n  }\n\n  handlePaginationChange = (e, { activePage }) => {\n    this.setState({\n      activePage\n    });\n  };\n\n  handleOpenInfo = () => this.setState({ activeInfoWindow: true });\n\n  handleCloseInfo = () => this.setState({ activeInfoWindow: false });\n\n  render() {\n    const { correctCamera, correctDate, images, moreThanZeroImages, activePage, activeLoader, activeInfoWindow } = this.state;\n    const maxNum = 9;\n    const imagesForPagination = images.slice((activePage - 1) * maxNum, activePage * maxNum);\n\n    return (\n      <div className=\"main-div\">\n\n        <HeaderComponent ref={this.myRef} />\n        <div className=\"main-content\">\n          <div className=\"title-form-div\">\n            <TitleComponent />\n            <FormComponent correctCamera={correctCamera} correctDate={correctDate} getImages={this.getImages} handleChangeDate={this.handleChangeDate} handleChangeCamera={this.handleChangeCamera} />\n          </div>\n          <ImagesComponent images={imagesForPagination} moreThanZeroImages={moreThanZeroImages} />\n          <Pagination ellipsisItem={null} firstItem={null} lastItem={null}\n            prevItem={images.length < 10 ? null : { content: <Icon name=\"angle left\" />, icon: true }}\n            nextItem={images.length < 10 ? null : { content: <Icon name=\"angle right\" />, icon: true }}\n            activePage={activePage}\n            onPageChange={this.handlePaginationChange}\n            totalPages={Math.ceil(images.length / 9)}\n          />\n        </div>\n        <FooterComponent />\n        <Icon className=\"info-icon\" name=\"info circle\" size=\"huge\" onClick={this.handleOpenInfo} />\n        <InfoComponent activeInfoWindow={activeInfoWindow} handleCloseInfo={this.handleCloseInfo} />\n        <LoaderComponent activeLoader={activeLoader} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui/dist/semantic.min.css';\nimport './main.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}